name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write    # necessário para OIDC
      contents: read
    steps:
      # 1. Puxa o código
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # 2. Configura Node 18 + cache de dependências
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      # 3. Instala dependências
      - name: Install dependencies
        run: npm install

      # 4. Build do projeto
      - name: Build project
        run: npm run build

      # 5. Gera ID Token para OIDC (corrigido)
      - name: Get Id Token
        id: idtoken
        uses: actions/github-script@v6
        with:
          script: return await core.getIDToken()
          result-encoding: string

      # 6. Deploy via OIDC
      - name: Deploy to Azure Static Web Apps via OIDC
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "upload"
          app_location: "build"      # pasta do build
          api_location: ""           # se não tiver backend
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
